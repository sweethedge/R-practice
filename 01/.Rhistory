setwd("C:/Rwork/Part-I")
st.df <- studentx
# 실습: 엑셀 파일 가져오기
# fie 경로: "C:\\Rwork\\Part-I\\studentexcel.xlsx"
studentx <- read.xlsx(file.choose(), sheetIndex = 1, encoding =  "UTF-8")
studentx
Sys.setenv(JAVA_HOME = "C:\\Program Files\\Java\\jre1.8.0_251")
# 실습: xlsx 관련 패키지를 메모리에 로드
library(rJava)
library(xlsx)
# 실습: 엑셀 파일 가져오기
# fie 경로: "C:\\Rwork\\Part-I\\studentexcel.xlsx"
studentx <- read.xlsx(file.choose(), sheetIndex = 1, encoding =  "UTF-8")
studentx
# 실습: write.csv() 함수를 이용한 파일 저장하기
setwd("C:/Rwork/Part-I")
st.df <- studentx
write.csv(st.df, "stdf.csv", row.names = F, quote = F)
# 실습: 엑셀 파일 가져오기
# fie 경로: "C:\\Rwork\\Part-I\\studentexcel.xlsx"
studentx <- read.xlsx(file.choose(), sheetIndex = 1, encoding =  "euc-kr")
studentx
st.df <- studentx
write.csv(st.df, "stdf.csv", row.names = F, quote = F, fileEncoding = 'euc-kr')
getws()
getwd()
getwd()
setwd("C:/Rwork/Part-Ⅲ")
setwd("C:/Rwork/Part-III")
setwd("C:\Rwork\01")
setwd("C:/Rwork/01")
# 해결문제
# BMI는 몸무게와 키를 이용하여 체지방율을 측정하는 지수이다.
# 자신의 몸무게와 키를 각각 변수 weight와 height에 저장하고 BMI지수를 계산해 본다.
# 단, 키는 cm로 입력 받아서 처리한다.
#
# BMI = 체중(kg) / (키(m) x 키(m))
weigh <- 54.6
heigh <- 1.73
bmi <- weigh / (heigh*heigh)
bmi
height <- scan()
# 키와 몸무게 scala입력
height <- scan()
asdfwer
# 키와 몸무게 scala입력
height <- scan()
weight <- scan()
BMI <- weight / (height / 100) ** 2
BMI
rm(comp)
rm(comp)
ls()
rm(list = ls())
HandW <- scan()
bmi <- HandW[2] / (HandW[1]) ** 2
bmi
print("키와 몸무게를 입력하시오: ")
HandW <- scan()
bmi <- HandW[2] / (HandW[1] / 100) ** 2
bmi
data <- scan()
height <- data[1]
weight <- data[2]
BMI <- weight / (height / 100) ** 2
BMI
rm(list = ls())     # 전체 변수 삭제
print("키와 몸무게를 입력하시오: ")
data <- scan()
weight <- data[2]
data <- scan()
height <- data[1]
weight <- data[2]
BMI <- weight / (height / 100) ** 2
rm(list = ls())     # 전체 변수 삭제
print("키와 몸무게를 입력하시오: ")
data <- scan()
height <- data[1]
weight <- data[2]
BMI <- weight / (height / 100) ** 2
# data <- scan()
data <- readline()
mode(data)
data1 <- strsplit(data, " ")
data1
data1
height <- data1[1]
weight <- data1[2]
# 쪼개고 싶을 때는 strsplit(쪼개고 싶은거, " ")
data1 <- str_split(data, " ")
# 쪼개고 싶을 때는 strsplit(쪼개고 싶은거, " ")
install.packages("stringr")
library(stringr)
data1 <- str_split(data, " ")
data1
rm(list = ls())     # 전체 변수 삭제
()
173 54
# data <- scan()
data <- readline()
# 데이터 타입을 보고 싶으면 mode()
mode(data)
data1 <- str_split(data, " ")
data1 <- str_split(data, " ")
data1
data <- str_split(data, " ")
rm(list = ls())     # 전체 변수 삭제
# data <- scan()
data <- readline()
# 데이터 타입을 보고 싶으면 mode()
mode(data)
data <- str_split(data, " ")
data
data <- as.vector(data)
data
data <- unlist(data)
mode(data)
as.vector(data)
is.vector(data)
# 숫자벡터로 변경
height <- data[1]
weight <- data[2]
BMI <- weight / (height / 100) ** 2
rm(list = ls())     # 전체 변수 삭제
# 숫자벡터로 변경
data <- as.numeric(data)
#문자열 입력
data <- readline()
# 문자열 분리
data <- str_split(data, " ")
# 벡터로 형변환
data <- unlist(data)
as.vector(data)
# 벡터 확인
is.vector(data)
# 숫자벡터로 변경
data <- as.numeric(data)
height <- data[1]
weight <- data[2]
BMI <- weight / (height / 100) ** 2
# 자료형 확인
mode(data)
mode(df)
df <- data.frame()
mode(df)
class(df)
df <- edit(df)
df
# 데이터프레임 열명 변경
names(df)
# 데이터프레임 열명 변경
names(df) <- c("키", "몸무게게")
# 데이터프레임 열명 변경
names(df) <- c("키", "몸무게")
df
df
df$BMI <- df$몸무게 / (df$키 / 100) ** 2
df
health
health <- read.csv('01_국민건강보험공단500.csv', header = T, fileEncoding = 'euc-kr')
health
mode(health)
mode(df)
health$BMI <- health$체중 / (health$신장 / 100) ** 2
health
}
df
df
csvtemp <- read.csv('emp.csv', header = T)
health <- read.csv('01_국민건강보험공단500.csv', header = T, fileEncoding = 'euc-kr')
health
mode(health)
health$BMI <- health$체중 / (health$신장 / 100) ** 2
health
health <- read.csv('01_국민건강보험공단500.csv', header = T,  stringsAsFactors = F,fileEncoding = 'euc-kr')
health
mode(health)
health$BMI <- health$체중 / (health$신장 / 100) ** 2
health
df$비만도 <- if(df$BMI < 20) {
"저체중"
} else if (df$BMI <= 24) {
"정상"
} else if (df$BMI <= 29) {
"과체중"
} else "비만"
df$비만도 <- if(df$BMI < 20) {
c("저체중")
} else if (df$BMI <= 24) {
c("정상")
} else if (df$BMI <= 29) {
c("과체중")
} else c("비만")
health$비만도 <- if(health$BMI < 20) {
"저체중"
} else if (health$BMI <= 24) {
"정상"
} else if (health$BMI <= 29) {
"과체중"
} else "비만"
health
rm(list = ls())     # 전체 변수 삭제
dfbmi <- read.csv('01_국민건강보험공단500.csv', header = T,  stringsAsFactors = F,fileEncoding = 'euc-kr')
dfbmi
mode(dfbmi)
dfbmi$BMI <- dfbmi$체중 / (dfbmi$신장 / 100) ** 2
dfbmi
df <- data.frame()
# 클래스 내의 tuple의 데이터타입은 list고
mode(df)
# 클래스는 data.frame
class(df)
df <- edit(df)
df
# 데이터프레임 열명 변경
names(df) <- c("키", "몸무게")
# 새로운 변수를 추가하려면 df$"니가_추가하고_싶은_변수_이름 <-
df$BMI <- df$몸무게 / (df$키 / 100) ** 2
mode(df)
View(dfbmi)
dfbmi
head(dfbmi)
dfbmi$비만도 <- ifelse(dfbmi$BMI<20, "저체중",
ifelse(dfbmi$BMI < 25), "정상",
ifelse(dfbmi$BMI < 30), "과체중", "비만"
)
dfbmi$비만도 <- ifelse(dfbmi$BMI<20, "저체중",
ifelse(dfbmi$BMI < 25, "정상",
ifelse(dfbmi$BMI < 30, "과체중", "비만"
)))
head(dfbmi)
# 빈도 테이블
table(dfbmi$성별)
# 빈도 테이블
# 필드 별 레코드를 구하고 싶으면 table()
table(dfbmi$성별, dfbmi$비만도)
# 빈도 테이블 저장
write.csv(table(dfbmi$성별, dfbmi$비만도), 'frequency.csv')
freq <- read.csv('frequency.csv', header = T, fileEncoding = 'euc-kr')
freq <- read.csv('frequency.csv', header = T, stringsAsFactors = F ,fileEncoding = 'euc-kr')
freq <- read.csv('frequency.csv', header = T, stringsAsFactors = F ,fileEncoding = 'euc-kr', quote = F)
dfbmi <- read.csv('01_국민건강보험공단500.csv', header = T,  stringsAsFactors = F,fileEncoding = 'euc-kr', quote = FALSE)
# 빈도 테이블 저장
write.csv(table(dfbmi$성별, dfbmi$비만도), 'frequency.csv', quote = FALSE)
freq <- read.csv('frequency.csv', header = T, stringsAsFactors = F ,fileEncoding = 'euc-kr')
freq <- read.csv('frequency.csv', header = T, stringsAsFactors = F ,fileEncoding = 'euc-kr')
# 빈도 테이블 저장
write.csv(table(dfbmi$성별, dfbmi$비만도), 'frequency.csv', quote = FALSE)
# 빈도 테이블 저장
write.csv(table(dfbmi$성별, dfbmi$비만도), 'frequency.csv', quote = F)
# 빈도 테이블 저장
write.csv(table(dfbmi$비만도, dfbmi$성별), 'frequency.csv', quote = F)
# 빈도 테이블 저장
write.csv(table(dfbmi$비만도, dfbmi$성별), 'frequency.csv', quote = F, fileEncoding = 'euc-kr')
write.csv(dfbmi, 'healthdiag.csv',  quote = F, fileEncoding = 'euc-kr')
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
dfbmi
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# 높은 혈당(공복 혈당 100mg/dL 이상)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
head(dfbmi)
diagInfo <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', header = T, stringsAsFactors = F,fileEncoding = 'euc-kr')
mode(diaginfo); class(diagInfo)
mode(diaginfo)
diagInfo <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', seq(",") ,header = T, stringsAsFactors = F,fileEncoding = 'euc-kr')
diagInfo <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', sep = ',' ,header = T, stringsAsFactors = F,fileEncoding = 'euc-kr')
mode(diaginfo)
head(diagInfo)
diagInfo$대사증후군 <- ifelse(diagInfo$수축기.혈압 >= 130 && diagInfo$이완기.혈압 >= 85, "Y",
ifelse(diagInfo$식전혈당.공복혈당 >=100, "Y",
ifelse(diagInfo$트리글리세라이드>=150, "Y",
ifelse(diagInfo$성별코드==1 && diagInfo$HDL.콜레스테롤 < 40, "Y",
ifelse(diagInfo$성별코드==2 && diagInfo$HDL.콜레스테롤 < 50, "Y",
ifelse(diagInfo$성별코드==1 && diagInfo$허리둘레>=90, "Y",
ifelse(diagInfo$성별코드==2 && diagInfo$허리둘레>=85, "Y", "N"
)))))))
head(diagInfo)
write.csv(diagInfo, 'test.csv',  quote = F, fileEncoding = 'euc-kr')
tail(diagInfo)
diagInfo <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', sep = ',' ,header = T, stringsAsFactors = F,fileEncoding = 'euc-kr')
head(diagInfo)
head(diagInfo)
head(diagInfo)
diagInfo$대사증후군 <- ifelse(diagInfo$수축기.혈압 >= 130 || diagInfo$이완기.혈압 >= 85, "Y",
ifelse(diagInfo$식전혈당.공복혈당 >=100, "Y",
ifelse(diagInfo$트리글리세라이드>=150, "Y",
ifelse(diagInfo$성별코드==1 && diagInfo$HDL.콜레스테롤 < 40, "Y",
ifelse(diagInfo$성별코드==2 && diagInfo$HDL.콜레스테롤 < 50, "Y",
ifelse(diagInfo$성별코드==1 && diagInfo$허리둘레>=90, "Y",
ifelse(diagInfo$성별코드==2 && diagInfo$허리둘레>=85, "Y", "N"
)))))))
tail(diagInfo)
diagInfo <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', sep = ',' ,header = T, stringsAsFactors = F,fileEncoding = 'euc-kr')
head(diagInfo)
diagInfo$대사증후군 <- ifelse(diagInfo$수축기.혈압 >= 130 && diagInfo$이완기.혈압 >= 85, "Y",
ifelse(diagInfo$식전혈당.공복혈당 >=100, "Y",
ifelse(diagInfo$트리글리세라이드>=150, "Y",
ifelse(diagInfo$성별코드==1 && diagInfo$HDL.콜레스테롤 < 40, "Y",
ifelse(diagInfo$성별코드==2 && diagInfo$HDL.콜레스테롤 < 50, "Y",
ifelse(diagInfo$성별코드==1 && diagInfo$허리둘레>=90, "Y",
ifelse(diagInfo$성별코드==2 && diagInfo$허리둘레>=85, "Y", "N"
)))))))
write.csv(diagInfo, 'test.csv',  quote = F, fileEncoding = 'euc-kr')
tail(diagInfo)
rm(diagInfo)
diagInfo <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', sep = ',' ,header = T, stringsAsFactors = F, fileEncoding = 'euc-kr')
tail(diagInfo)
gc()
table(diagInfo$수축기.혈압, diagInfo$이완기.혈압, diagInfo$식전혈당.공복혈당, diagInfo$트리글리세라이드, diagInfo$성별코드, diagInfo$HDL.콜레스테롤, diagInfo$허리둘레)
table(titanic$age)
# 실습: 인터넷에서 파일을 가져와 시각화하기
# 단계 1: 깃허브에서 URL을 사용하여 타이타닉(titanic) 자료 가져오기
titanic <-
read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/COUNT/titanic.csv")
titanic
table(titanic$age)
table(diagInfo$수축기.혈압)
rm(diagInfo)
rm(titanic)
dfcheck <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', sep = ',' ,header = T, stringsAsFactors = F, fileEncoding = 'euc-kr')
names(dfcheck)
name(dfcheck)
name(dfcheck)
dfcheck <- read.csv('국민건강보험공단_건강검진정보_20211229.csv', sep = ',' ,header = T, stringsAsFactors = F, fileEncoding = 'euc-kr')
head(dfcheck)
name(dfcheck)
names(dfcheck)
df2 <- dfcheck[c("성별코드", "허리둘레", "수축기.혈압", "이완기.혈압", "식전혈당.공복혈당.", "트리글리세라이드", "HDL.콜레스테롤")]
#NA 값 제거
df2 <- na.omit(df2)
tail(df2)
#열명 변경
df2 <- names("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당.", "트리글리세라이드", "HDL콜레스테롤")
#열명 변경
df2 <- names("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
#열명 변경
df2 <- c(names("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤"))
#열명 변경
df2 <- c("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
#열명 변경
rm(df2)
#열명 변경
names(df2) <- c("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
df2 <- dfcheck[c("성별코드", "허리둘레", "수축기.혈압", "이완기.혈압", "식전혈당.공복혈당.", "트리글리세라이드", "HDL.콜레스테롤")]
#NA 값 제거
df2 <- na.omit(df2)
tail(df2)
#열명 변경
names(df2) <- c("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
names(df2)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# T/F로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
head(df2)
# 높은 혈당(공복 혈당 100mg/dL 이상)
df2$높은혈당 <- (df2$공복혈당>=100)
head(df2)
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
df2$높은중성지방 <- (df2$트리글리세라이드>=150)
head(df2)
head(df2)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤수치 <- ((df2$성별코드==1) & (df2$HDL콜레스테롤<40) | (df2$성별코드==2) & (df2$HDL콜레스테롤<50))
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
df2$복부비만 <- ((df2$성별코드==1) & (df2$허리둘레<=90) | (df2$성별코드==2) & (df2$허리둘레<=85))
head(df2)
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
df2$대사증후군수수 <- df2$높은혈압 +
df2$높은혈당 +
df2$높은중성지방 +
df2$높은중성지방 +
df2$낮은콜레스테롤수치 +
df2$복부비만
head(df2)
View(df2)
View(df2)
df2$판별 <- ifelse(df2$대사증후군수수==0, "정상",
ifelse(df2$대사증후군수수 <=2, "주의군", "위험군"
)))
df2$판별 <- ifelse(df2$대사증후군수수==0, "정상",
ifelse(df2$대사증후군수수<=2, "주의군", "위험군"
))
head(df2)
names(df2)
names(df2)[13] <- "대사증후군수수"
names(df2)[13] <- "대사증후군수"
names(df2)
df2$성별 <- ifelse(df2$성별코드==1, "남", "여")
table(df2$판별, df2$성별)
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤수치 <- ((df2$성별코드==1) && (df2$HDL콜레스테롤<40) | (df2$성별코드==2) && (df2$HDL콜레스테롤<50))
table(df2$판별, df2$성별)
rm(df2)
df2 <- dfcheck[c("성별코드", "허리둘레", "수축기.혈압", "이완기.혈압", "식전혈당.공복혈당.", "트리글리세라이드", "HDL.콜레스테롤")]
#NA 값 제거
df2 <- na.omit(df2)
#열명 변경
names(df2) <- c("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
names(df2)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# TRUE/FALSE로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
head(df2)
# 높은 혈당(공복 혈당 100mg/dL 이상)
df2$높은혈당 <- df2$공복혈당>=100
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
df2$높은중성지방 <- df2$트리글리세라이드>=150
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤수치 <- ((df2$성별코드==1) && (df2$HDL콜레스테롤<40) | (df2$성별코드==2) && (df2$HDL콜레스테롤<50))
rm(df2)
df2 <- dfcheck[c("성별코드", "허리둘레", "수축기.혈압", "이완기.혈압", "식전혈당.공복혈당.", "트리글리세라이드", "HDL.콜레스테롤")]
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# TRUE/FALSE로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
#NA 값 제거
df2 <- na.omit(df2)
#열명 변경
names(df2) <- c("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
df2$성별 <- ifelse(df2$성별코드==1, "남", "여")
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# TRUE/FALSE로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
head(df2)
# 높은 혈당(공복 혈당 100mg/dL 이상)
df2$높은혈당 <- df2$공복혈당>=100
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
df2$높은중성지방 <- df2$트리글리세라이드>=150
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤수치 <- ((df2$성별코드==1) & (df2$HDL콜레스테롤<40) | (df2$성별코드==2) & (df2$HDL콜레스테롤<50))
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
df2$복부비만 <- ((df2$성별코드==1) & (df2$허리둘레<=90) | (df2$성별코드==2) & (df2$허리둘레<=85))
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
df2$대사증후군수 <- df2$높은혈압 +
df2$높은혈당 +
df2$높은중성지방 +
df2$높은중성지방 +
df2$낮은콜레스테롤수치 +
df2$복부비만
df2$판별 <- ifelse(df2$대사증후군수==0, "정상",
ifelse(df2$대사증후군수<=2, "주의군", "위험군"))
names(df2)
df2$성별 <- ifelse(df2$성별코드==1, "남", "여")
table(df2$판별, df2$성별)
rm(df2)
df2 <- dfcheck[c("성별코드", "허리둘레", "수축기.혈압", "이완기.혈압", "식전혈당.공복혈당.", "트리글리세라이드", "HDL.콜레스테롤")]
#NA 값 제거
df2 <- na.omit(df2)
#열명 변경
names(df2) <- c("성별코드", "허리둘레", "수축기혈압", "이완기혈압", "공복혈당", "트리글리세라이드", "HDL콜레스테롤")
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# TRUE/FALSE로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
# 높은 혈당(공복 혈당 100mg/dL 이상)
df2$높은혈당 <- df2$공복혈당>=100
# 높은 중성지방(트리글리세라이드 150mg/dL 이상)
df2$높은중성지방 <- df2$트리글리세라이드>=150
# 낮은 HDL 콜레스테롤 수치(남성은 40mg/dL 미만, 여성은 50mg/dL 미만)
df2$낮은콜레스테롤수치 <- ((df2$성별코드==1) & (df2$HDL콜레스테롤<40) | (df2$성별코드==2) & (df2$HDL콜레스테롤<50))
# 복부 비만(남성 90cm 이상, 여성 85cm 이상)
df2$복부비만 <- ((df2$성별코드==1) & (df2$허리둘레>=90) | (df2$성별코드==2) & (df2$허리둘레>=85))
# 판별
# 0 : 정상, 1~2 : 주의군, 3~5 : 위험군
df2$대사증후군수 <- df2$높은혈압 +
df2$높은혈당 +
df2$높은중성지방 +
df2$높은중성지방 +
df2$낮은콜레스테롤수치 +
df2$복부비만
df2$판별 <- ifelse(df2$대사증후군수==0, "정상",
ifelse(df2$대사증후군수<=2, "주의군", "위험군"))
names(df2)
table(df2$판별, df2$성별)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# 한 두개의 ifelse로 처리가 안 될 것같으면 필드를 파서 써라.
# TRUE/FALSE로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) & (df2$이완기혈압 >= 85))
table(df2$판별, df2$성별)
# 해결문제
# 국민건강보험 관리공단의 건강검진 자료를 이용하여 대사증후군을 판별하시오.
# 높은 혈압(130/85mmHg 이상)
# 한 두개의 ifelse로 처리가 안 될 것같으면 필드를 파서 써라.
# TRUE/FALSE로 해본다면
df2$높은혈압 <- ((df2$수축기혈압>=130) | (df2$이완기혈압 >= 85))
table(df2$판별, df2$성별)
